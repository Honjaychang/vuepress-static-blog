(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{361:function(v,_,l){"use strict";l.r(_);var i=l(42),t=Object(i.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h1",{attrs:{id:"数据结构"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[v._v("#")]),v._v(" 数据结构")]),v._v(" "),l("div",{staticClass:"custom-block warning"},[l("p",{staticClass:"custom-block-title"},[v._v("TODO")]),v._v(" "),l("ul",[l("li",[v._v("链表\n"),l("ul",[l("li",[v._v("如何判断一个链表是否存在环")]),v._v(" "),l("li",[v._v("两个链表存在交叉，找到交叉的节点")])])]),v._v(" "),l("li",[v._v("雨水")]),v._v(" "),l("li",[v._v("树\n"),l("ul",[l("li",[v._v("二叉树中两节点之间最短路径")]),v._v(" "),l("li",[v._v("判断两棵二叉树是否相等")]),v._v(" "),l("li",[v._v("js 树形数据 转 扁平数据\n文章地址：http://bugshouji.com/shareweb/t1402")])])]),v._v(" "),l("li",[v._v("图")]),v._v(" "),l("li",[v._v("爬楼梯 就是斐波拉契数列")])])]),v._v(" "),l("p",[v._v("数据结构基础")]),v._v(" "),l("ul",[l("li",[v._v("数组")]),v._v(" "),l("li",[v._v("字符串")]),v._v(" "),l("li",[v._v("链表")]),v._v(" "),l("li",[v._v("栈")]),v._v(" "),l("li",[v._v("队列")]),v._v(" "),l("li",[v._v("二又树")])]),v._v(" "),l("p",[v._v("算法思想")]),v._v(" "),l("ul",[l("li",[v._v("DFS")]),v._v(" "),l("li",[v._v("BFS")]),v._v(" "),l("li",[v._v("递归与回溯排序")]),v._v(" "),l("li",[v._v("动态规划")])]),v._v(" "),l("p",[v._v("关键API的实现")]),v._v(" "),l("ul",[l("li",[v._v("apply方法的实现")]),v._v(" "),l("li",[v._v("call方法的实现")]),v._v(" "),l("li",[v._v("bind方法的实现")]),v._v(" "),l("li",[v._v("实现全局事件总线")]),v._v(" "),l("li",[v._v("数组中的reduce 方法")]),v._v(" "),l("li",[v._v("深拷贝与浅拷贝")]),v._v(" "),l("li",[v._v("封装原生ajax")])]),v._v(" "),l("p",[v._v("框架底层原理所涉及的算法")]),v._v(" "),l("ul",[l("li",[v._v("diff 算法")]),v._v(" "),l("li",[v._v("Fiber 机制")]),v._v(" "),l("li",[v._v("nextTick的实现")]),v._v(" "),l("li",[v._v("响应式原理")])])])}),[],!1,null,null,null);_.default=t.exports}}]);